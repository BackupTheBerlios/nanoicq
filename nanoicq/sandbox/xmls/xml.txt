# vim: set enc=utf8 et
# $Id: xml.txt,v 1.15 2006/07/14 13:49:33 lightdruid Exp $
#

TODO:
Еще 1 фишка, там если у тебя идет <Error>text</Error>? можно вставить атрибут id, что бы можно было
идентефицировать по номеру ошибку, это возможно понядобиться для перевода
и так же isOk параметр, где он есть можно именовать номером ошибки

Desc:

Each chunk of well-formed XML message must be separated by '\0'.
Everything is case sensitive, xml tags and attributes/properties data.

C = client
S = server

=====================================
Chat
=====================================

* Connection

C: <connect nickname='<CDATA>' password='<CDATA>'/>\0
S: 
    connection successful:
        <connect error='0' msg='Your nickname now is : <CDATA>'/>\0

    connection not successful:
        <error>Client not authorized or bad password</error>

    reasons: 
        * DB is down
        * wrong password


* Ping

C: <ping/>
S: <pong/>


* Get room list

C: <getroomlist/>
S:

Good:

<getroomlist error='0' >

                <room id='4'
                        name="room #1"

                        creatorid='0'
                        operatorid='0'

                        languageid='0'
                        temporary='0'
                        passwordProtected='0'

                        moderationAllowed='0'
                        roomManagementLevel='0'
                        userManagementlevel='0'

                        numberOfUsers='0'
                        numberOfSpectators='0'
                />


                <room id='5'
                        name="room #2"

                        creatorid='0'
                        operatorid='0'

                        languageid='0'
                        temporary='0'
                        passwordProtected='0'

                        moderationAllowed='0'
                        roomManagementLevel='0'
                        userManagementlevel='0'

                        numberOfUsers='0'
                        numberOfSpectators='0'
                />

</getroomlist>

Bad:

<getroomlist error='1' msg = 'error message'/>


* Get room properties

C: <getroomproperties id='<CDATA>'/>\0
S:

Good:
<getroomproperties error='0' >

                <room id='1'
                        name="room #1"

                        creatorid='0'
                        operatorid='0'

                        languageid='0'
                        temporary='0'
                        passwordProtected='0'

                        moderationAllowed='0'
                        roomManagementLevel='0'
                        userManagementlevel='0'

                        numberOfUsers='0'
                        numberOfSpectators='0'
                />

    # Here we have allowed users
    <client id='1' />
    <client id='4' />
    ...

</getroomproperties>

Bad:
<getroomproperties error='1' msg="error message" />
    

* Set room properties

C: 

    <setroomproperties id='1' userManagementlevel='2' param1='val' param2='val' />

S:  * Successful:
    <setroomproperties error='0'/>

    * Not successful:
    <setroomproperties error='1' msg='<CDATA> (reason)'/>
   

* Join room

C: <joinroom id='<CDATA>' /> or <joinroom id='<CDATA>' password='<CDATA>' />
S:

    * Successful

    uid = user ID, rid = room ID

    <joinroom error='0' uid='4' rid='5' />

    * Not successful

    <joinroom error='0' rid='5' msg='Bad or missing password' />
    
    Reasons:
        * 'Bad or missing password' (if room is password protected, if it's not,
        then password would be silently ignored)
        * 'You are already in this room'
        * 'DB is down'


* Add allowed user

C: <addalloweduser id='<CDATA>' rid='id' />
S:  * Successful:
    <addalloweduser id='<CDATA>' error='0' /> 

    * Not successful:
    <addalloweduser id='<CDATA>' />


* Remove allowed user

C: <removealloweduser id='<CDATA>' />

S:  * Successful:
    <removealloweduser id='<CDATA>' error='0' /> 

    * Not successful:
    <removealloweduser id='<CDATA>'  /> 
 

* FIXME: not yet implemented 
 Invite user to room, FIXME: why we need a password here?

C: <inviteuser uid='<CDATA>' rid='<CDATA>' password='<CDATA>' />

S:  * Successful:
    <inviteuser uid='<CDATA>' rid='<CDATA>'  error='0' /> 

    * Not successful:
    <inviteuser id='<CDATA>' rid='<CDATA>'
        error='1' msg='<CDATA> (reason)' /> 
 

* Delete room, FIXME: why we need a password here? 

C: <delroom id='<CDATA>' />

S: 
    * Successful:
    <delroom id='<CDATA>' error='0' /> 

    * Not successful:
    <delroom id='<CDATA>' error='1' msg='<CDATA> (reason)' /> 


* Create room

C:  <createroom param='value' ... />

S: 
    * Successful:

<createroom error='0' name="qwerty" >
</createroom>

    * Not successful:
    <createroom error='1' msg="Room with name 'qwerty' already exists" />
        

* Join room as spectator

FIXME: not implemented yet

C: <joinasspectator room='<CDATA>'/>
S:

    * Successful

    <joined room='<CDATA>' />\0

    <childrooms name='<CDATA>'>
    </childrooms>\0

    <room name='<CDATA>' clients='<CDATA>' >
        <param name='title' value='<CDATA>' />
    </room>\0

    <clients room='<CDATA>' nb='<CDATA>'>
        <client name='<CDATA>' />
        ...
    </clients>\0
 
    * Not successful:
    <joinasspectator room='<CDATA>' error='1' msg='<CDATA>' /> 


* List users in room

C: <listusers id='<CDATA>' />

S: 
    * Successful:

    <listusers error='0' rid='<CDATA>'>
        <client id='<CDATA>' name='<CDATA>' />
        ...
    </listusers>\0
  

    * Not successful:

    <listusers error='1' id='<CDATA>' msg='<CDATA> (reason)' />


* Leave room

C: <leaveroom id='<CDATA>' />

S: 
    * Successful:
    <leaveroom id='<CDATA>' rid='<CDATA>' error='0' /> 

    * Not successful:
    <leaveroom rid='<CDATA>' error='1' msg='<CDATA> (reason)' /> 


* Locate user - FIXME, not implemented, what's this?


* List blocked users - FIXME, not implemented, what's this? 


* Silent user

C: <silentuser id='<CDATA>' period='<CDATA>' />

S: 
    * Successful:
    <silent id='<CDATA>' error='0' />

    * Not successful:
    <silent id='<CDATA>' error='1' msg='<CDATA> (reason)' />


* Block user - FIXME, not implemented, what's this? What is the difference 
  from silent user?


* Redirect user

C: <redirect nickname='<CDATA>' room='<CDATA> (target room)' />
S: 
    * Successful:
    <redirect nickname='<CDATA>' error='0' />

    * Not successful:
    <redirect nickname='<CDATA>' error='1' msg='<CDATA> (reason)' />

* Allowed users:   

C: <addalloweduser uid="3" rid="11" />

S: <addalloweduser uid='3' rid='11' error='0' />

C: <deletealloweduser uid="3" rid="11" />
S: <deletealloweduser uid='3' rid='11' error='0' />

C: <listalloweduser rid="11" />

S: <listalloweduser error='0' rid='11' >
<client id='1' />
<client id='2' />
<client id='3' />
</listalloweduser>

* Redirect users:

C: <redirectuser uid="2" from-rid="11" to-rid="2" />

S: <redirectuser error='0' uid="2" from-rid="11" to-rid="2" />


=====================================
Groups
=====================================
 

* Group lookup - FIXME, not implemented, what's this?


* List groups

C: <listgroups />

S: 
    * Successful

<groups error='0'>
    <group id='1' name="group 0" moderationLevel='0' />
    <group id='2' name="group 1" moderationLevel='1' />
    <group id='3' name="group 2" moderationLevel='2' />
</groups>

    * Not successful
    <groups error='1' msg='<CDATA> (reason)' />
 

* Create group

C: <creategroup name='<CDATA>' moderationLevel='<CDATA>' />

S:
    * Successful

<creategroup error='0'>
    <group id='4' name='abcd' moderationLevel='1' />
</creategroup>

    * Not successful
    <creategroup name='<CDATA>' error='1' msg='<CDATA> (reason)' />


* Retrieve group properties

C: <getgroupproperties id='<CDATA>' />
 
S:
    * Successful
    <getgroupproperties error='0' id='1' name='group 0' moderationLevel='0' />

    * Not successful
    <getgroupproperties error='1' id='45' msg="Can't find group with id='45'" /
  

* Set group properties

C: <setgroupproperties id='<CDATA>' name='<CDATA>' moderationLevel='<CDATA>' />

S:
    * Successful
    <setgroupproperties error='0' id='2' />

    * Not successful
    <setgroupproperties error='1' msg="Can't find group with id='13'" />
 

* List group members

C: <listmembers id='<CDATA>' />

S: 
    * Successful


<listmembers error='0' id='0' >
    <client id='1' name="as" />
</listmembers>

    If there are no members in group, output will look like this:

<listmembers error='0' id='0' > </listmembers>

    * Not successful
    <listmembers id='<CDATA>' error='1' msg='<CDATA>' />
 

=====================================
Users
=====================================

FIXME: how we can create/delete users?

* Blocked users

C: 

* Look up

C: <userlookup name='asd' />

S: <userlookup error='0' id='123' />
 
* Retrieve user properties, FIXME: how to get/set last IP?

C: <getuserproperties id='<CDATA>' />

S:
    * Successful

<getuserproperties error='0' id='1' >
    <client id='1' name="as" groupid='0' languageid='0' isblocked='0' />
</getuserproperties>

 
    * Not successful
    <getuserproperties id='<CDATA>' error='1' msg='<CDATA>' />
 

* Set user properties, for list of allowed properties take a look at
  <getuserproperties>.

C:  
    <setuserproperties id='3' languageid='10' param='value' />

S:
    * Successful
    <setuserproperties error='0' id='3' />
 
    * Not successful
    <setuserproperties id='<CDATA>' error='1' msg='<CDATA>' />


* Block/unblock user - FIXME, not implemented, what's this?


=====================================
Messaging
=====================================

* Send message

Message types are coded using number, here is mapping:

personal            0
private             1 -- FIXME: what's difference from personal?
public              2
broadcast           3
get records list    4 -- FIXME: what's this?
get record          5 -- FIXME: what's this? 
custom              6
store record        7 -- FIXME: what's this? 

C:  <message type='<CDATA>'>
        <recipients>
            <client id='<CDATA>' />
            ...
        </recipients>
        <text>'<CDATA>'</text>
    </message>


* OnData - FIXME: what's this?
  
# ---

