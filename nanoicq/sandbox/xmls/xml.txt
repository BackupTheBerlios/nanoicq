# vim: set enc=utf8 et
# $Id: xml.txt,v 1.3 2006/05/25 21:39:50 lightdruid Exp $
#

Each chunk of well-formed XML message must be separated by '\0'.
Everything is case sensitive, xml tags and attributes/properties data.
Session ID is omitted, for sake of simplicity, but it's used in each of chunk.

C = client
S = server

=====================================
Chat
=====================================

* Connection

C: <connect nickname='<CDATA>' password='<CDATA>'/>\0
S: 
    connection successful:
        <connect isok='1' msg='Your nickname is <CDATA>'/>\0

    connection not successful:
        <connect isok='0' msg='<CDATA> (reason)'/>\0

    reasons: 
        * DB is down
        * wrong password


* Ping

C: <ping/>
S: <pong/>


* Get room list

C: <getrooms/>
S:
    <rooms nb='<CDATA> (number of rooms)'>
        <room name='<CDATA>' clients='<CDATA> (number of clients in room)' >
            <param name='<CDATA>' value='<CDATA>' />
        </room>
        ...
    </rooms>\0

    Parameters (number of clients stored as attribute in '<room>' node):

    * roomId
    * roomName,
    * creator (ID)
    * operator (ID)
    * FIXME: allowedUsers?
    * languageId (ID, optional)
    * isTemp - 0/1
    * isPasswordProtected - 0/1
    * moderationAllowed - 0/1
    * roomManagementLevel
    * userManagementLevel
    * numberOfSpectators


* Get room properties

C: <getroomproperties room='<CDATA>'/>\0
S:
    
    <room name='<CDATA>' clients='<CDATA> (number of clients in room)' >
        <param name='<CDATA>' value='<CDATA>' />
    </room>

    Parameters (number of clients stored as attribute in '<room>' node):

    * roomId
    * roomName,
    * creator (ID)
    * operator (ID)
    * FIXME: allowedUsers?
    * languageId (ID, optional)
    * isTemp - 0/1
    * isPasswordProtected - 0/1
    * moderationAllowed - 0/1
    * roomManagementLevel
    * userManagementLevel
    * numberOfSpectators


* Set room properties

C: 
    <setroomproperties room='<CDATA>'>
        <param name='<CDATA>' value='<CDATA>'/>
        ...
    </setroomproperties>

S:  * Successful:
    <setroomproperties room='<CDATA>' isok='1'/>

    * Not successful:
    <setroomproperties room='<CDATA>' isok='0' msg='<CDATA> (reason)'/>
   

* Join room

C: <join room='<CDATA>' /> or <join room='<CDATA>' password='<CDATA>' />
S:

    * Successful, 4 chunks of data must be sent:

    <joined room='<CDATA>' />\0

    <childrooms name='<CDATA>'>
    </childrooms>\0

    <room name='<CDATA>' clients='<CDATA>' >
        <param name='title' value='<CDATA>' />
    </room>\0

    <clients room='<CDATA>' nb='<CDATA>'>
        <client name='<CDATA>' />
        ...
    </clients>\0

    * Not successful
    
    <error><CDATA> (reason)</error>\0

    Reasons:
        * 'Bad or missing password' (if room is password protected, if it's not,
        then password would be silently ignored)
        * 'You are already in this room'
        * 'DB is down'


* Add new allowed user

C: <addnewalloweduser room='<CDATA>' nickname='<CDATA>' password='<CDATA>' />
S:  * Successful:
    <addnewalloweduser room='<CDATA>' nickname='<CDATA>' isok='1' /> 

    * Not successful:
    <addnewalloweduser room='<CDATA>' nickname='<CDATA>' 
        isok='0' msg='<CDATA> (reason)' /> 


* Remove allowed user

C: <removealloweduser room='<CDATA>' nickname='<CDATA>'/>

S:  * Successful:
    <removealloweduser room='<CDATA>' nickname='<CDATA>' isok='1' /> 

    * Not successful:
    <removealloweduser room='<CDATA>' nickname='<CDATA>' 
        isok='0' msg='<CDATA> (reason)' /> 
 

* Invite user to room, FIXME: why we need a password here?

C: <inviteuser room='<CDATA>' nickname='<CDATA>' password='<CDATA>' />

S:  * Successful:
    <inviteuser room='<CDATA>' nickname='<CDATA>' isok='1' /> 

    * Not successful:
    <inviteuser room='<CDATA>' nickname='<CDATA>' 
        isok='0' msg='<CDATA> (reason)' /> 
 

* Delete room, FIXME: why we need a password here? 

C: <delroom room='<CDATA>' password='<CDATA>'>

S: 
    * Successful:
    <delroom room='<CDATA>' isok='1' /> 

    * Not successful:
    <delroom room='<CDATA>' isok='0' msg='<CDATA> (reason)' /> 


* Create room

C:  <createroom room='<CDATA>'>
        <param name='<CDATA>' value='<CDATA>' />
        ...
    </createroom>\0

S: 
    * Successful:
    <createroom room='<CDATA>' isok='1' /> 

    * Not successful:
    <createroom room='<CDATA>' isok='0' msg='<CDATA>' /> 
        

* Join room as spectator

C: <joinasspectator room='<CDATA>'/>
S:

    * Successful

    <joined room='<CDATA>' />\0

    <childrooms name='<CDATA>'>
    </childrooms>\0

    <room name='<CDATA>' clients='<CDATA>' >
        <param name='title' value='<CDATA>' />
    </room>\0

    <clients room='<CDATA>' nb='<CDATA>'>
        <client name='<CDATA>' />
        ...
    </clients>\0
 
    * Not successful:
    <joinasspectator room='<CDATA>' isok='0' msg='<CDATA>' /> 


* List users in room

C: <listusers room='<CDATA>' />

S: 
    * Successful:

    <clients isok='1' room='<CDATA>'>
        <client name='<CDATA>' />
        ...
    </clients>\0
  

    * Not successful:

    <clients isok='0' room='<CDATA>' msg='<CDATA> (reason)' />


* Leave room

C: <leave room='<CDATA>' />

S: 
    * Successful:
    <leave room='<CDATA>' isok='1' /> 

    * Not successful:
    <leave room='<CDATA>' isok='0' msg='<CDATA> (reason)' /> 


* Locate user - FIXME, not implemented, what's this?


* List blocked users - FIXME, not implemented, what's this? 


* Silent user

C: <silent nickname='<CDATA>' period='<CDATA>' />

S: 
    * Successful:
    <silent nickname='<CDATA>' isok='1' />

    * Not successful:
    <silent nickname='<CDATA>' isok='0' msg='<CDATA> (reason)' />


* Block user - FIXME, not implemented, what's this? What is the difference 
  from silent user?


* Redirect user

C: <redirect nickname='<CDATA>' room='<CDATA> (target room)' />
S: 
    * Successful:
    <redirect nickname='<CDATA>' isok='1' />

    * Not successful:
    <redirect nickname='<CDATA>' isok='0' msg='<CDATA> (reason)' />
   

=====================================
Groups
=====================================
 

* Group lookup - FIXME, not implemented, what's this?


* List groups

C: <listgroups />

S: 
    * Successful
    <groups isok='1'>
        <group id='<CDATA>' name='<CDATA>' moderationLevel='<CDATA>' />
        ...
    </groups>

    * Not successful
    <groups isok='0' msg='<CDATA> (reason)' />
 

* Create group

C: <creategroup name='<CDATA>' moderationLevel='<CDATA>' />

S:
    * Successful
    <creategroup name='<CDATA>' isok='1' />

    * Not successful
    <creategroup name='<CDATA>' isok='0' msg='<CDATA> (reason)' />


* Retrieve group properties

C: <getgroupproperties id='<CDATA>' />
 
S:
    * Successful
    <getgroupproperties id='<CDATA>' isok='1' name='<CDATA>' 
        moderationLevel='<CDATA>'>

    * Not successful
    <getgroupproperties id='<CDATA>' isok='0' msg='<CDATA>' 
  

* Set group properties

C: <setgroupproperties id='<CDATA>' name='<CDATA>' moderationLevel='<CDATA>' />

S:
    * Successful
    <setgroupproperties id='<CDATA>' isok='1' />

    * Not successful
    <setgroupproperties id='<CDATA>' isok='0' msg='<CDATA>' 
 

* List group members

C: <listmembers id='<CDATA>' />

S: 
    * Successful
    <listmembers id='<CDATA>' isok='1' >
        <client name='<CDATA>' id='<CDATA>' name='<CDATA>'
            moderationLevel='<CDATA>' roomManagementLevel='<CDATA>'
            isSpectator='<CDATA>' groupUserManagementLevel='<CDATA>'
            moderationLevel='<CDATA>' >
        ...
    </listmembers>

    * Not successful
    <listmembers id='<CDATA>' isok='0' msg='<CDATA>' 
 

=====================================
Users
=====================================

FIXME: how we can create/delete users?
 
* Retrieve user properties, FIXME: how to get/set last IP?

C: <getclientproperties id='<CDATA>' />

S:
    * Successful
    <getclientproperties id='<CDATA>' isok='1'
        gid='<CDATA>' languageId='<CDATA>' isBlocked='<CDATA>'
        moderationLevel='<CDATA>' roomManagementLevel='<CDATA>'
        groupUserManagementLevel='<CDATA>' lastIP='<CDATA>'
        moderationLevel='<CDATA>' >
    </getclientproperties>
 
    * Not successful
    <getclientproperties id='<CDATA>' isok='0' msg='<CDATA>' />
 

* Set user properties, for list of allowed properties take a look at
  <getclientproperties>.

C:  <setuserproperty id='<CDATA>'>
        <property name='<CDATA>' value='<CDATA>'>
        ...
    </setuserproperty>

S:
    * Successful
    <setclientproperty id='<CDATA>' isok='1' />
 
    * Not successful
    <setclientproperties id='<CDATA>' isok='0' msg='<CDATA>' />


* Block/unblock user - FIXME, not implemented, what's this?


=====================================
Messaging
=====================================

* Send message

Message types are coded using number, here is mapping:

personal            0
private             1 -- FIXME: what's difference from personal?
public              2
broadcast           3
get records list    4 -- FIXME: what's this?
get record          5 -- FIXME: what's this? 
custom              6
store record        7 -- FIXME: what's this? 

C:  <message type='<CDATA>'>
        <recipients>
            <client id='<CDATA>' />
            ...
        </recipients>
        <text>'<CDATA>'</text>
    </message>


* OnData - FIXME: what's this?
  
# ---

